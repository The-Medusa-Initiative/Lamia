# MedusaServ Authentication Module Makefile
# ========================================
# Version: 0.3.0c
# Author: roylepython
# Project: The Medusa Project

CXX = g++
CXXFLAGS = -std=c++17 -pthread -O2 -Wall -Wextra
TARGET = medusaserv_auth_production
SOURCE = medusaserv_auth_fixed.cpp

# Build targets
.PHONY: all clean install deploy test

all: $(TARGET)

$(TARGET): $(SOURCE)
	@echo "ðŸ”® Compiling MedusaServ Authentication Server v0.3.0c..."
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(SOURCE)
	@echo "âœ… Compilation successful!"

clean:
	@echo "ðŸ§¹ Cleaning build artifacts..."
	rm -f $(TARGET)
	@echo "âœ… Clean complete!"

install: $(TARGET)
	@echo "ðŸ“¦ Installing to /usr/local/bin..."
	sudo cp $(TARGET) /usr/local/bin/
	sudo chmod +x /usr/local/bin/$(TARGET)
	@echo "âœ… Installation complete!"

deploy: $(TARGET)
	@echo "ðŸš€ Deploying to production server 172.236.28.155..."
	sshpass -p "7303nmU8Q29WjXpPlumsBAXyJjMt" scp $(TARGET) root@172.236.28.155:/root/
	sshpass -p "7303nmU8Q29WjXpPlumsBAXyJjMt" scp -r web root@172.236.28.155:/root/
	@echo "âœ… Deployment complete!"

start-production: deploy
	@echo "âš¡ Starting production server..."
	sshpass -p "7303nmU8Q29WjXpPlumsBAXyJjMt" ssh root@172.236.28.155 "cd /root && pkill -f medusaserv || true && nohup ./$(TARGET) > medusaserv_auth.log 2>&1 &"
	@echo "âœ… Production server started!"

test: $(TARGET)
	@echo "ðŸ§ª Testing authentication server..."
	@echo "Starting test server on port 8080..."
	sed 's/MedusaServAuth server(80)/MedusaServAuth server(8080)/' $(SOURCE) > test_server.cpp
	$(CXX) $(CXXFLAGS) -o test_server test_server.cpp
	./test_server &
	@sleep 2
	@echo "Testing login flow..."
	curl -X POST -d "username=medusa&password=izJaRuA2kwbNwezvKsCzo7DUNnQc" http://localhost:8080/login
	@echo "âœ… Test complete!"
	pkill -f test_server || true
	rm -f test_server test_server.cpp

help:
	@echo "MedusaServ Authentication Module v0.3.0c"
	@echo "========================================"
	@echo ""
	@echo "Available targets:"
	@echo "  all              - Build the authentication server"
	@echo "  clean            - Remove build artifacts"
	@echo "  install          - Install to system (/usr/local/bin)"
	@echo "  deploy           - Deploy to production server"
	@echo "  start-production - Deploy and start production server"
	@echo "  test             - Run test suite"
	@echo "  help             - Show this help message"
	@echo ""
	@echo "Features:"
	@echo "  âœ… IP Whitelisting (72.14.201.65 authorized)"
	@echo "  âœ… Native Lamia Processing"
	@echo "  âœ… Corporate cPanel-style Interface"
	@echo "  âœ… 6 Admin Snippets with search capability"
	@echo "  âœ… 3D Emotions & GIF3D Integration"
	@echo "  âœ… ICEWALL Security System"
	@echo "  âœ… Yorkshire Champion Standards"